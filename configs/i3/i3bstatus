#!/bin/sh

# SECURITY NOTE:
# Please make sure that iwconfig and ifconfig cannot be altered
# by bad people, because they could possibly cause damage.

home_wifi="Gratis-Viren Google Wifi Edition"

# segment text color
segment() {
        echo -n "{\"name\":\"\",\"color\":\"$2\",\"full_text\":\"$1\",\"separator\":false,\"separator_block_width\":0}"
}

diskspace() {
        segment "$(df -h --output=avail / | tail -n +2)iB free " "#FFFFFF"
}

wifi() {
        iwconfig="$(iwconfig 2>/dev/null)"
        essid="$(echo "$iwconfig" | grep ESSID: | sed 's/.*ESSID:\"\(.*\)\".*/\1/')"
        rate="$(echo "$iwconfig" | grep "Bit Rate" | sed 's/.*Bit Rate=\(.* .b\/s\).*/\1/' | sed 's/ \(.\)b\/s/\1/')"
        quality="$(echo "$(echo "$iwconfig" | grep "Link Quality" | sed 's/.*Link Quality=\([0-9]*\/[0-9]*\) .*/\1/')*100" | bc -sql | cut -c1-3 | sed 's/\.\?$/%/')"
        freq="$(echo "$iwconfig" | grep Frequency: | sed 's/.*Frequency:\([0-9]*\).*/\1/')"
        [ "$freq" = 2 ] && freq="2.4"
        freq="$freq GHz"
        [ "$essid" != "$home_wifi" ] && essid="📶 $essid" || essid="🏠"
        segment " $essid ($quality, $rate, $freq) " "#00FF00"
}

battery() {
        acpi="$(acpi -b | sed s/,//g)"
        status="$(echo "$acpi" | cut -d' ' -f3)"
        percentage="$(echo "$acpi" | cut -d' ' -f4)"
        remaining="$(echo "$acpi" | cut -d' ' -f5)"
        case $percentage in *"100%"*) status=Full ;; esac
        case $status in
                *"Full"*)        status=🔌 ;;
                *"Discharging"*) status=🔋 ;;
                *"Charging"*)    status=⚡ ;;
                *)               status=❔ ;;
        esac
        segment " $status $percentage $remaining " "#FFFFFF"
}

temp() {
        segment " $(acpi -t | cut -d' ' -f4 | cut -d. -f1)°C " "#FFFFFF"
}

prev_idle=0
prev_total=0

cpu() {
        cpus="$(grep '^cpu[0-9]\+' /proc/stat)"
        curr_total=$(echo "$cpus" | sed 's/cpu[0-9]\+ \([0-9]\+\) \([0-9]\+\) \([0-9]\+\) \([0-9]\+\) .*$/\1+\2+\3+\4/' | tr "\n" + | sed 's/+$//g')
        curr_idle=$(echo "$cpus" | sed 's/cpu[0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+ \([0-9]\+\) .*$/\1/' | tr "\n" + | sed 's/+$//g')

        diff_total="(($curr_total) - ($prev_total))"

        segment " $(echo "(1000 * ($diff_total - ($curr_idle) + ($prev_idle)) / $diff_total + 5) / 10" | bc -sql | cut -c1-3 | sed 's/\.$//')% " "#FFFFFF"

        prev_idle=$curr_idle
        prev_total=$curr_total
}

audio() {
        amixer sget Master | grep off >/dev/null \
                && \
                        segment " 🔇 " "#FFFFFF" \
                || \
                        segment " 🔉 $(pactl list sinks | grep "Volume: " | grep -v "Base Volume:" | sed 's/.* \([0-9]\+%\).*/\1/') " "#FFFFFF"
}

datetime() {
        segment " $(date "+%d.%m.%Y %T") " "#FFFFFF"
}

backlight() {
        segment " 💻 $(ybacklight Sc/Sm)" "#FFFFFF"
}

separator() {
        echo -n ','
        segment "" "#FFFFFF"
        echo -n ','
}

render() {
        echo -n '['
        diskspace
        separator
        wifi
        separator
        battery
        separator
        temp
        separator
        cpu
        separator
        audio
        separator
        datetime
        separator
        backlight
        echo '],'
}

main() {
        echo '{"version":1}'
        echo '['
        while true ; do
                render
                sleep 1
        done
}

main
