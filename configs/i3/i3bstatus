#!/bin/sh

# SECURITY NOTE:
# Please make sure that you can trust the output of ifconfig and
# iwconfig and the contents of the files '/proc/stat' and
# '/sys/class/power_supply/BAT?', '?' being any character.

home_wifi="Gratis-Viren Google Wifi Edition"

# segment text color
segment() {
        echo -n "{\"color\":\"$2\",\"full_text\":\"$1\",\"separator\":false,\"separator_block_width\":0}"
}

diskspace() {
        segment "$(~/.config/i3/disk) free " "#FFFFFF"
}

wifi() {
        iwconfig="$(iwconfig 2>/dev/null)"
        # TODO: check if connected
        essid="$(echo "$iwconfig" | grep ESSID: | sed 's/.*ESSID:\"\(.*\)\".*/\1/')"
        rate="$(echo "$iwconfig" | grep "Bit Rate" | sed 's/.*Bit Rate=\(.* .b\/s\).*/\1/' | sed 's/ \(.\)b\/s/\1/')"
        quality="$(echo "$(echo "$iwconfig" | grep "Link Quality" | sed 's/.*Link Quality=\([0-9]*\/[0-9]*\) .*/\1/')*100" | bc -sql | cut -c1-3 | sed 's/\.\?$/%/')"
        freq="$(echo "$iwconfig" | grep Frequency: | sed 's/.*Frequency:\([0-9]*\).*/\1/')"
        [ "$freq" = 2 ] && freq="2.4"
        freq="$freq GHz"
        [ "$essid" != "$home_wifi" ] && essid="📶 $essid" || essid="🏠"
        segment " $essid ($quality, $rate, $freq) " "#00FF00"
}

battery() {
        for bat in /sys/class/power_supply/BAT? ; do
                status="$(cat $bat/status)"
                percentage="$(cat $bat/capacity)%"
                remaining="$(echo "$(cat $bat/energy_now) / $(cat $bat/power_now)" | bc -sql 2>/dev/null | cut -c1-3 | sed 's/\.$//')h "
                power="$(echo "$(cat $bat/power_now) / 1000000" | bc -sql 2>/dev/null | sed 's/\(^[0-9]\+\...\).*$/\1/')W "
                [ "$power" = "0W " ] && power=""
                [ "$remaining" = "h " ] && remaining=""
                case $percentage in *"100%"*) status=Full ;; esac
                case $status in
                        *"Full"*)        status=🔌 ;;
                        *"Discharging"*) status=🔋 ;;
                        *"Charging"*)    status=⚡ ;;
                        *)               status=❔ ;;
                esac
                segment " $status $percentage $power$remaining" "#FFFFFF"
        done
}

temp() {
        temp=$(cat /sys/class/thermal/thermal_zone0/temp)
        segment " $(($temp / 1000))°C " "#FFFFFF"
}

prev_idle=0
prev_total=0

cpu() {
        cpus="$(grep '^cpu[0-9]\+' /proc/stat)"
        curr_total=$(echo "$cpus" | sed 's/^cpu[0-9]\+ \([0-9]\+\) \([0-9]\+\) \([0-9]\+\) \([0-9]\+\) .*$/\1+\2+\3+\4/' | tr "\n" + | sed 's/+$/\n/' | bc -sql)
        curr_idle=$(echo "$cpus" | sed 's/^cpu[0-9]\+ [0-9]\+ [0-9]\+ [0-9]\+ \([0-9]\+\) .*$/\1/' | tr "\n" + | sed 's/+$/\n/' | bc -sql)

        diff_total="($curr_total - $prev_total)"

        segment " $(echo "100 * ($diff_total - $curr_idle + $prev_idle) / $diff_total + 5" | bc -sql | cut -c1-3 | sed 's/\.$//')% " "#FFFFFF"

        prev_idle=$curr_idle
        prev_total=$curr_total
}

ram() {
        raw="$(free | grep Mem:)"
        total="$(echo "$raw" | awk '{ print $2 }')"
        used="$(echo "$raw" | awk '{ print $3 }')"
        segment " $(($used * 100 / $total))% " "#FFFFFF"
}

audio() {
        amixer sget Master | grep off >/dev/null \
                &&      segment " 🔇 " "#FFFFFF" \
                ||      segment " 🔉 $(pactl list sinks | grep "Volume: " | grep -v "Base Volume:" | sed 's/.* \([0-9]\+%\).*/\1/') " "#FFFFFF"
}

datetime() {
        segment " $(date "+%d.%m.%Y %T") " "#FFFFFF"
}

backlight() {
        segment " 💻 $(ybacklight Sc/Sm)" "#FFFFFF"
}

separator() {
        echo -n ',{"color":"#FFFFFF","full_text":"","separator":false,"separator_block_width":0},'
}

render() {
        echo -n '['
        diskspace
        separator
        wifi
        separator
        battery
        separator
        temp
        separator
        cpu
        separator
        ram
        separator
        audio
        separator
        datetime
        separator
        backlight
        echo '],'
}

main() {
        gcc -O3 ~/.config/i3/disk.c -o ~/.config/i3/disk
        echo '{"version":1}'
        echo '['
        while true ; do
                render
                sleep 1
        done
}

main
