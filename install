#!/bin/bash

source i3brc

###### Update packages and add ppas
add-apt-repository -y ppa:yubico/stable
add-apt-repository -y ppa:nextcloud-devs/client
tools/udpkg 'https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb'
add-apt-repository -y universe
dpkg --add-architecture i386
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
apt-add-repository -y \
        "deb https://download.mono-project.com/repo/ubuntu preview main"
curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
add-apt-repository -y \
   "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | apt-key add -
add-apt-repository -y \
        "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ disco main"
apt update
apt upgrade -y

###### Install main apps, drivers and dependencies
echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections
apt install -y gcc g++ clang make
[ "$I3B_VSCODE" = 1 ] && snap install vscode --classic
snap install github-desktop --beta --classic
cp -f configs/env /etc/environment
for p in $(cat packages/apt) ; do apt install -y $p ; done
for p in $(cat packages/pip) ; do pip install $p ; done
for p in $(cat packages/netsh) ; do netsh $p ; done
for p in $(cat packages/udpkg) ; do udpkg $p ; done
[ "$I3B_BROWSER" = "b" ] && apt install -y brave-browser
[ "$I3B_BROWSER" = "o" ] && tools/udpkg "https://download1.operacdn.com/pub/opera/desktop/60.0.3255.109/linux/opera-stable_60.0.3255.109_amd64.deb"
[ "$I3B_BROWSER" = "f" ] && apt install -y firefox
[ "$I3B_BROWSER" = "c" ] && tools/udpkg 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb'
# just to make sure icons arent corrupted all the time (happend on my machine)
apt remove -y breeze-cursor-theme

###### Install slmenu
netsh -s hg -C "make install clean" -c https://bitbucket.org/rafaelgg/slmenu

###### Get and install yEd
if [[ "$I3B_YED" = 1 ]] ; then
	curl -L -o yed.sh "https://www.yworks.com/resources/yed/demo/yEd-3.19_with-JRE11_64-bit_setup.sh"
	sh yed.sh
	rm -f yed.sh
fi

###### Get and install sane-sent
netsh -c https://github.com/chrissxYT/sane-sent

###### Get and install the Arduino IDE
if [ "$I3B_ARDUINO" = 1 ] ; then
	curl -L "https://downloads.arduino.cc/arduino-1.8.8-linux64.tar.xz" |\
                tar xJf -
	mv arduino-1.8.8 /usr/bin/
	ret=$(pwd)
	cd /usr/bin/arduino-1.8.8
	./arduino-linux-setup.sh $USER
	cd $ret
fi

if [ "$I3B_TEENSY" = 1 ] ; then
	###### Get and install the Teensy loader
	curl -L -o /etc/udev/rules.d/49-teensy.rules "https://www.pjrc.com/teensy/49-teensy.rules"
	curl -L -o t.tar.gz "https://www.pjrc.com/teensy/teensy_linux64.tar.gz"
	tar xzf t.tar.gz
	mv -f teensy /usr/bin
	rm -f t.tar.gz libpng12.so.0 libusb-0.1.so.4

        if [ "$I3B_ARDUINO" = 1 ] ; then
	        ###### Get and install Teensyduino
	        netsh https://www.pjrc.com/teensy/td_145/TeensyduinoInstall.linux64
        fi
fi

###### Get and install TeamViewer
[ "$I3B_TEAMVIEWER" = 1 ] && tools/udpkg 'https://download.teamviewer.com/download/linux/teamviewer_amd64.deb'

###### Get and install FlashPrint
[ "$I3B_FLASHPRINT" = 1 ] && tools/udpkg 'http://www.sz3dp.com/upfile/2018/12/03/20181203162713_662.deb'

###### Build git libsecret cred helper
RET=$(pwd)
cd /usr/share/doc/git/contrib/credential/gnome-keyring
make
cd $RET

###### Get and install EOS
if [[ "$I3B_EOS" = 1 ]] ; then
	mkdir tmp_eos_stuff
	cd tmp_eos_stuff
	curl -L -o eos.zip "https://www.pabst-software.de/lib/exe/fetch.php?media=programme:eos:eos.zip"
	unzip eos.zip
	cp -f EOS.exe /usr/bin/eos.exe
	cd ..
	rm -rf tmp_eos_stuff
        cp -f tools/eos /usr/bin/eos
fi

###### Install tools
cp -f tools/update /usr/bin/update
cp -f tools/_update /usr/bin/_update
cp -f tools/mnt /bin/mnt
cp -f tools/umnt /bin/umnt
cp -f tools/netsh /usr/bin/netsh
cp -f tools/lock /usr/bin/lock
cp -f tools/udpkg /usr/bin/udpkg
cp -f tools/screenshot /usr/bin/screenshot
cp -f tools/todo /usr/bin/todo
cp -f tools/bookmark /usr/bin/bookmark

###### Change the distro name
cp -f configs/issue /etc/issue
cp -f configs/issue.net /etc/issue.net
cp -f configs/os-release /etc/os-release
cp -f configs/lsbr /etc/lsb-release

###### Finish up everything
apt -f install -y
apt autoremove -y

# give the user rights to all of their home directory
chown -R $I3B_USER:$I3B_USER ~

# change the login shell to zsh
# (have to do this here, so you dont have to put in your pw again)
chsh -s /bin/zsh $I3B_USER
